!!!
%html
  %head
    %meta{ charset:"utf-8" }
    %link(rel="stylesheet" href="main.css")
    %script
      MathJax = {tex: { tags: 'ams'  /* should be 'ams', 'none', or 'all' */ } };


    %script{ id:"MathJax-script", src:"./es5/tex-chtml-full.js" }
  %body
    %h1 算数の問題
    %p
      2020.3.8
    %h2 問1
    %p
      .exp A(□)
      は
      .exp □×2+1
      を意味します。
      %br
      .exp B(□)
      は
      .exp □を10で割った余り
      を意味します。
    %p
      例えば。
      %br
      .exp A(1+2+3)
      は、
      .exp A(6)
      なので、
      .exp 6×2+1
      となり、
      .exp A(1+2+3) = 13
      です。
      %br
      .exp B(1234)
      は、
      .exp 1234を10で割った余り
      なので、
      .exp B(1234) = 4
      です。
      %br
      .exp A(B(13))
      は、
      .exp B(13) = 3 なので、
      なので、
      .exp A(B(13)) = A(3)
      となり、
      .exp A(B(13)) = A(3) = 3×2+1 = 7
      つまり、
      .exp A(B(13)) = 7
      です。
    %h3 (1)
    %p
      .exp A(B(76))
      は、いくつですか？
    %h3 (2)
    %p
      .exp A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(A(B(1))))))))))))))))))))))))))))))))))))))))
      は、いくつですか？
      %br
      ※ (2) の式には、A と B が順に 20個ずつ書かれています。
    %hr{ noshade:true }
    %h2 問2
    %p
      数がたくさん一列に並んでいます。
      %br
      左端の数は、1です。
      %br
      左端以外の数は「自分より左にある数の合計を 10 で割った余り」です。
      %br
      たとえば左端から2つ目の数を計算してみましょう。
      「自分より左にある数」が「
      %span.exp 1
      」なので、合計は
      %span.exp 1
      。
      %span.exp 1
      を
      %span.exp 10
      で割った余りは
      %span.exp 1
      なので、左から2つ目の数は
      %span.exp 1
      であることがわかります。
    %h3 (1)
    %p
      数字の並びを、左から順に 10個 書いてください。
    %h3 (2)
    %p
      左から100個目の数字は何でしょう(注意：左端の数字は、左から1番目です)。
    %hr{ noshade:true }
    %h2 問3
    %p
      カードが5枚あります。
      %br
      表には 1 から 5 の数字が書かれていて、裏には、表と裏の合計が10になるような数字が書いてあります。
      %br
      たとえば、表が 3 のカードの裏は 7、表が 5 のカードの裏は 5 です。
    %p
      このカードから2枚選んでならべて、2桁の数を作るとすると。
      %br
      %span.exp 95
      や
      %span.exp 23
      は作ることができます。しかし、
      %span.exp 44
      (4が書かれているカードは一枚しかない)、
      %span.exp 30
      (0が書かれているカードはない)、
      %span.exp 73
      (7の裏は3なので、7を使うと3は使えない)、
      などは作れません。
    %h3 (1)
    %p
      このカードから2枚選んでならべて、2桁の数を作ります。作ることができる9の倍数をすべて書いてください。
    %h3 (2)
    %p
      このカードから3枚選んでならべて、3桁の数を作ります。作ることができる11の倍数を、大きい方から2個書いてください。
    %hr{ noshade:true }
    %h2 問4
    - [ [ 4, [2,4,1,3], [1,4,2,3], 2, 3 ], [ 5, [1, 3, 5, 2, 4] ] ].each.with_index(1) do |set,ix|
      - num, ok, ng, ng0, ng1 = set
      %h3 (#{ix})
      %p
        -(1..num).each do |n|
          %span.card=n
        の#{num}枚のカードがあります。
        %br
        隣のカードとの差が1にならないように並べる並べ方は何通りありますか？
        %br
        -if ok && ng
          たとえば、
          -ok.each do |n|
            %span.card=n
          は、どこも隣との差が 1 ではないので OK です。
          %br
          -ng.each do |n|
            %span.card=n
          は、
          %span.card=ng0
          と
          %span.card=ng1
          の差が 1 なので NG です。
    %hr{ noshade:true }
    %h2 問5
    %p
      左端の数以外のすべての桁が以下の(1)(2) のいずれかの条件を満たす数を「ぐるぐる数」と呼びます
    %ol
      %li 自分は、左隣の数字と同じ
      %li 自分は、(左隣の数字+1)を10で割った余り
    %p
      例えば。
      %br
      %span.exp 45677
      や
      %span.exp 789900123
      は、ぐるぐる数です。
      %br
      %span.exp 902123
      や
      %span.exp 3210
      は、ぐるぐる数ではありません。
    %h3 (1)
    %p 10 より大きいぐるぐる数を小さい順に10個書き出してください。
    %h3 (2)
    %p 1000 より小さいぐるぐる数を大きい順に10個書き出してください。


